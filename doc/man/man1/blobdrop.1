.TH "blobdrop" 1 "07 July 2022" "" "blobdrop Documentation"

.SH NAME
blobdrop \- Quickly drag and drop files from the terminal

.SH SYNOPSIS
.B blobdrop
[\-hvbcikpRt]
[\-f \fIOPT\fP]
[\-P \fIOPT\fP]
[\-s \fIOPT\fP]
[\-x \fIOPT\fP]
.I FILES

.SH DESCRIPTION

.P
This program allows you to drag files directly from the terminal to other applications.
It can be used both as a source (files can be dragged from the terminal) and as a sink (dropped file names will be printed in the terminal).

Filenames can either be given as command line arguments or by piping them into stdin, one filename per line.

Several frontends are available to drag files from. By default, blobdrop will immediately start the drag operation without having to hold down the mouse. The user can then just click on the target drop location, meaning by default there is no GUI involved.
See
.B FRONTENDS
for more information.

.TP
.B \-h, \-\-help
Show help.
.TP
.B \-v, \-\-version
Show version information.
.TP
.B \-b, \-\-frameless
Show a frameless window.
.TP
.B \-c, \-\-cursor
Spawn the window at the location of the mouse cursor.
.TP
.B \-f, \-\-frontend \fIOPT\fP
Selects the frontend. Must be one of {"auto" (default), "gui", "immediate", "notify", "clipboard", "stdout"}. For a more detailed explanation of the frontend options see
.B FRONTENDS
below.
.TP
.B \-i, \-\-intercept
Intercept another drag and drop operation. This option is useful to convert other external drag and drop events into drag and drop events that use any of the available frontends. Using this option will unconditionally start the
.B gui
frontend to intercept another drag and drop operation. Once an element is dropped into the window, the
.B \-\-frontend
option determines the frontend of the outgoing converted drag and drop event.
.TP
.B \-k, \-\-keep
When using sink mode, keep dropped files around by default.
.TP
.B \-p, \-\-persistent
Do not auto-hide the window while dragging.
.TP
.B \-P, \-\-prefix
Manually specify a remote prefix to be used with the \-\-remote option instead of using a heuristic.
.TP
.B \-R, \-\-remote
Enable ssh remote transparency. This sets the URI scheme to
.B sftp://
and the username, hostname and port based on heuristics, thus making it possible to drag and drop across a forwarded X11 session from a remote host. DnD requires trusted X11 forwarding (ssh -Y). In case of the heuristic failing, the \-\-prefix option can be used to manually set a value.
.TP
.B \-s, \-\-thumb\-size \fIOPT\fP
Sets the size of the thumbnail for listed images. The default size is 64.
.TP
.B \-t, \-\-ontop
Keep the window on top of other windows.
.TP
.B \-x, \-\-auto\-quit \fIOPT\fP
Changes the conditions when blobdrop will automatically quit. Must be one of {"never", "first", "all" (default)}. See
.B AUTOQUIT BEHAVIOUR
below.

.SH EXIT STATUS
Returns zero on success.

.SH FRONTENDS
Blobdrop has multiple frontends available that change the behaviour how the drag and drop operation starts. The frontend can be chosen with the
.B \-\-frontend
option.
.SS "auto"
This is the default frontend and chooses one of the following frontends automatically based on some conditions. On X11, the
.B immediate
frontend is used unless no file is passed, in which case the
.B gui
frontend is started instead. On Wayland the
.B gui
frontend is used in all cases due to limitations of the Wayland protocol.

.SS "gui"
This frontend shows an user interface that lists all items. Each item can be conveniently dragged on its own, or alternatively there is a button to drag all items at once.

.SS "immediate"
This frontend starts the drag operation automatically without showing a GUI in between. The user does not need to hold any mouse button and can just move the mouse cursor to the target location and then click once to drop the files.
.br
Due to limitations in Wayland, this option is only available on X11. This option also works over XWayland, but then the target drop location is required to be running in XWayland too. Native Wayland does not have support for this frontend, because the spec requires an implicit grab for native wl_data_device::start_drag() operations, thus making it impossible to implement this workflow on Wayland.
.br
Another feature implemented in immediate mode is that the parent terminal window will be hidden automatically during the drag operation, unless the
.B \-\-persistent
option is set. This is useful for usecases where the target application is hidden behind the terminal where blobdrop was started from, which is often the case with floating window managers. This is an additional second usability improvement that is unfortunately also not possible to implement on Wayland due to "security" restrictions.

.SS "notify"
This frontend spawns a notification containing the URLs of the files to drag in the
.I x\-kde\-urls
field. Window managers with support for this field then enable the notification to be dragged itself into other application windows. This option is mainly useful on KDE Plasma.

.SS "clipboard"
This copies the file URIs (not the content) to the clipboard, which can then be pasted in supported programs.

.SS "stdout"
This frontend simply prints all files in the terminal as OSC8 links. Terminal emulators with support for OSC8 could allow the user to drag and drop such links directly. This option is equivalent to "ls \-\-hyperlink=always".

.SH AUTOQUIT BEHAVIOUR
Using
.B \-\-auto\-quit
it is possible to specify the behaviour when blobdrop will automatically quit. The following options are possible,
.B all
is the default behaviour.
.SS "never"
This option means that blobdrop will never automatically quit.
.SS "first"
Using this option causes blobdrop to quit after the first drag operation has finished.
.SS "all"
With this option blobdrop keeps track of which items have been dragged already. It quits when all paths have been dragged at least once.

.SH DEFAULT ARGUMENTS
The
.B $BLOBDROP_ARGS
environment variable can be used to provide default arguments. The default arguments will be prepended to the actually passed arguments, for example:
.PP
.in +2n
.EX
$ \fBBLOBDROP_ARGS\fP=\fI"\-f gui \-p"\fP \fBblobdrop\fP \-x \fInever\fP image.png
$ # is equivalent to:
$ \fBblobdrop\fP \-f \fIgui\fP \-p \-x \fInever\fP image.png
.EE
.in
.PP

This can be useful to change the default value of some options permanently.

.SH EXAMPLES
Here are some example usecases.

The following example drags all png files in the current directory.
.PP
.in +2n
.EX
$ \fBblobdrop\fP *.png
.EE
.in
.PP

The next example drags a single file and explicitly does not show a GUI, always starting the drag operation right away. The user does not need to hold any mouse button. Then the user can just click on the target location to drop the file.
.PP
.in +2n
.EX
$ \fBblobdrop\fP \-f \fIimmediate\fP upload.mp4
.EE
.in
.PP

The example below shows a new frameless window that always stays on top of other windows, containing all files chosen in the fzf selection selection prompt.
.PP
.in +2n
.EX
$ \fBblobdrop\fP \-tb \-f \fIgui\fP $(\fBfzf\fP \-m)
.EE
.in
.PP

In this example blobdrop sends a desktop notification containing the URL of the given file and then quits immediately. On supported window managers the desktop notification itself can be dragged and dropped to any application.
.PP
.in +2n
.EX
$ \fBblobdrop\fP \-f \fInotify\fP doc.pdf
.EE
.in
.PP

The below example shows a window displaying all files that contain the phrase "uploadable". The UI will show up right away and if the
.B grep
command takes a while, then the UI will already display the files that were found so far. The list will be updated live, as all operations are done asynchronously.
.PP
.in +2n
.EX
$ \fBgrep\fP \-R \-\-files\-with\-matches uploadable | \fBblobdrop\fP
.EE
.in
.PP

The example below spawns a window under the cursor that intercepts any existing drag and drop operation and converts it into an outgoing immediate drag and drop operation. This can be helpful for touchpad users, where needing to hold a mouse button while simultaneously moving the mouse is an accessibility nightmare.
.PP
.in +2n
.EX
$ \fBblobdrop\fP \-ic \-f \fIimmediate\fP \-x \fIfirst\fP
.EE
.in
.PP

It is also possible to integrate blobdrop in other external programs. For example if you use the ranger commandline file manager, you can use blobdrop to drag any file with a simple keybinding in your ~/.config/ranger/rc.conf:
.PP
.in +2n
.EX
map <C\-d> shell blobdrop %p
.EE
.in
.PP

In tmux it is possible to drag the file under the cursor on double click with this "oneliner" keybinding:
.PP
.in +2n
.EX
bind \-n DoubleClick1Pane run\-shell "blobdrop \\"#{pane_current_path}/$(echo '#{mouse_line}' | cut \-c \-$((#{mouse_x} \- 1)) | grep \-o '\\\\S*$' )\\"\\"$(echo '#{mouse_line}' | cut \-c #{mouse_x}\- | grep \-o '^\\\\S*')\\""
.EE
.in
.PP

.SH HOMEPAGE
https://github.com/vimpostor/blobdrop

Please report bugs and feature requests in the issue tracker.
